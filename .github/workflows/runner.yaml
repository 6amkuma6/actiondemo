name: Test AWS Runner

on:
  push:
    branches:
      - main
  workflow_dispatch: # Allows manual trigger from GitHub Actions

jobs:
  test-runner:
    runs-on: self-hosted # This ensures it runs on your AWS self-hosted runner
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Print system info
        run: |
          echo "Testing the AWS Linux Runner"
          uname -a
          lsb_release -a || cat /etc/os-release
          whoami
          df -h
          free -m

      - name: Test basic commands
        run: |
          echo "Runner is working!"
          pwd
          ls -la
          # cloud-init YAML script for setting up a DevOps environment

#cloud-config
package_update: true
package_upgrade: true
packages:
  - curl
  - wget
  - unzip
  - tar
  - git
  - jq
  - tree
  - vim
  - nano
  - dnsutils
  - net-tools
  - software-properties-common
  - apt-transport-https
  - ca-certificates
  - gnupg
  - python3
  - python3-pip

runcmd:
  # Install AWS CLI
  - curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "/tmp/awscliv2.zip"
  - unzip /tmp/awscliv2.zip -d /tmp && sudo /tmp/aws/install
  - rm -rf /tmp/awscliv2.zip /tmp/aws

  # Install Azure CLI
  - curl -sL https://aka.ms/InstallAzureCLIDeb | sudo bash

  # Install Google Cloud SDK
  - echo "deb [signed-by=/usr/share/keyrings/cloud.google.gpg] http://packages.cloud.google.com/apt cloud-sdk main" | sudo tee /etc/apt/sources.list.d/google-cloud-sdk.list
  - curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo tee /usr/share/keyrings/cloud.google.gpg
  - sudo apt update && sudo apt install -y google-cloud-sdk

  # Install Terraform
  - curl -fsSL https://apt.releases.hashicorp.com/gpg | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
  - echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
  - sudo apt update && sudo apt install -y terraform

  # Install kubectl
  - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
  - chmod +x kubectl && sudo mv kubectl /usr/local/bin/

  # Install Helm
  - curl https://baltocdn.com/helm/signing.asc | sudo tee /usr/share/keyrings/helm-keyring.gpg
  - echo "deb [signed-by=/usr/share/keyrings/helm-keyring.gpg] https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
  - sudo apt update && sudo apt install -y helm

  # Install Ansible
  - pip install --upgrade pip
  - pip install ansible

  # Install GitHub CLI
  - curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /usr/share/keyrings/githubcli-archive-keyring.gpg
  - echo "deb [signed-by=/usr/share/keyrings/githubcli-archive-keyring.gpg] https://cli.github.com/packages stable main" | sudo tee /etc/apt/sources.list.d/github-cli.list
  - sudo apt update && sudo apt install -y gh

  # Verify installations
  - aws --version
  - az --version
  - gcloud --version
  - terraform -v
  - kubectl version --client
  - helm version
  - python3 --version
  - ansible --version
  - gh --version

